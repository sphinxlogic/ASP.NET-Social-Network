<?xml version="1.0" encoding="utf-8"?>
<project name="FisharooWeb" default="build" xmlns="http://nant.sf.net/release/0.85/nant.xsd">
  
  <!-- Directories -->
  <property name="trunk.dir" value="..\"/>
  <property name="FisharooWebTests.bin.dir" value="..\Source\FisharooWebTests\bin\debug"/>
  <property name="FisharooCoreTests.bin.dir" value="..\Source\FisharooCoreTests\bin\debug"/>
  <property name="FisharooWeb.bin.dir" value="..\Source\FisharooWeb\bin" />
  <property name="build.dir" value=""/>
  <property name="results.dir" value="Results" />
  <property name="database.dir" value="..\Databases"/>
  <property name="versioneddatabase.dir" value="${database.dir}\VersionedCopy"/>
  <property name="localdatabase.dir" value="${database.dir}\LocalCopy"/>
  <property name="binaries.dir" value="${trunk.dir}\binaries"/>
  <property name="devserver.website.dir" value="C:\data\www\dev.fisharoo.com"/>
  <property name="devserver.database.dir" value="C:\data\db"/>
  <property name="devserver.repository.dir" value="C:\data\repositories\Fisharoo.com"/>
  <property name="devserver.repository.database.dir" value="${devserver.repository.dir}\Databases"/>
  <property name="devserver.repository.versioneddatabase.dir" value="${devserver.repository.database.dir}\VersionedCopy"/>
  
  <!-- Properties -->
  <property name="company.name" value="Fisharoo"/>
  <property name="project.name" value="FisharooWeb" />
  <property name="version.major" value="1"/>
  <property name="version.minor" value="0"/>
  <property name="version.build" value="0"/>
  <property name="version.revision" value="0"/>
  <property name="project.fullversion" value="${version.major}.${version.minor}.${version.build}.${version.revision}" dynamic="true" />
  <property name="framework" value="C:\WINDOWS\Microsoft.NET\Framework\v3.5"/>
  <property name="database.server.development" value="localhost\sqlexpress"/>
  <property name="database.server.production" value="localhost"/>
  <property name="database.name" value="Fisharoo"/>
  
  <!-- Custom Assemblies -->
  <copy file="${trunk.dir}\source\BuildTasks\bin\Debug\Fisharoo.BuildTasks.dll" todir="${binaries.dir}\FisharooBuildTasks"/>
  <loadtasks assembly="${binaries.dir}\FisharooBuildTasks\Fisharoo.BuildTasks.dll"/>
  
  <!-- CALLED EXTERNALLY -->
  <target name="cruise" depends="setConnstringToDevelopmentDB, compile, buildDatabaseDevelopment, fisharooCoreTests, fisharooWebTests, buildDevelopmentDatabase2, updateDevserver" />
  <target name="build" depends="setConnstringToLocalDB, compile, buildDatabaseLocal, fisharooCoreTests, fisharooWebTests" />

  <target name="buildDatabaseDevelopment" depends="buildDevelopmentDatabase"/>
  <target name="buildDatabaseLocal" depends="dropDatabase, deleteLocalDatabaseFiles, copyVersionedDatabaseOverLocalDatabase, attachDatabase, updateDatabase"/>
  <target name="createDatabase" depends="deleteLocalDatabaseFiles, copyVersionedDatabaseOverLocalDatabase, attachDatabase, updateDatabase" />
  <target name="overwrite-versioned-database-with-local-database" depends="dropDatabase, copyLocalDatabaseOverVersionedDatabase, attachDatabase"/>

  <!-- Database Tasks -->
  <target name="setConnstringToLocalDB">
    <echo message="#### TARGET - SetConnstringToLocalDB ####"/>
    <xmlpoke file="${trunk.dir}/source/FisharooCore/ConnectionStringToUse.xml"
             xpath="/connectionStringToUse/environment" value="Local" />
  </target>
  
  <target name="setConnstringToDevelopmentDB">
    <echo message="#### TARGET - SetConnstringToDevelopmentDB ####"/>
    <xmlpoke file="${trunk.dir}/source/FisharooCore/ConnectionStringToUse.xml"
             xpath="/connectionStringToUse/environment" value="Development" />
  </target>
  
  <target name="setConnstringToProductionDB">
    <echo message="#### TARGET - SetConnstringToProductionDB ####"/>
    <xmlpoke file="${trunk.dir}/source/FisharooCore/ConnectionStringToUse.xml"
             xpath="/connectionStringToUse/environment" value="Production" />
  </target>

  <!--
  osql commands that are used below
  -b  = On error batch abort
  -n  = remove numbering
  -S  = server
  -E  = trusted connection
  -i  = inputfile
  -d  = use database name
  -->
  <target name="buildDevelopmentDatabase">
    <echo message="#### TARGET - updateDevserver ####"/>
    <echo message=""/>
    <echo message="Killing all processes..."/>
    <exec failonerror="true"  verbose="true" program="osql" commandline="-b -n -S ${database.server.production} -E -i&quot;${devserver.repository.database.dir}\KillProcessesUsingFisharoo.sql&quot; -d master" />
    <echo message="Detaching database"/>
    <exec failonerror="false" verbose="true" program="osql" commandline="-b -n -S ${database.server.production} -E -i&quot;${devserver.repository.database.dir}\DropFisharoo.sql&quot; -d master" />
    <echo message="Copying versioned database files to dev server"/>
    <copy file="${devserver.repository.versioneddatabase.dir}\Fisharoo.mdf" tofile="${devserver.database.dir}\Fisharoo.mdf" overwrite="true" verbose="true" />
    <copy file="${devserver.repository.versioneddatabase.dir}\Fisharoo_log.ldf" tofile="${devserver.database.dir}\Fisharoo_log.ldf" overwrite="true" verbose="true" />
    <echo message="Attaching versioned database files to dev server"/>
    <exec failonerror="true" verbose="true" program="osql" commandline="-b -n -S ${database.server.production} -E -i&quot;${devserver.repository.database.dir}\AttachFisharoo_DevServer.sql&quot; -d master" />

    <ExecuteSqlFiles PathToSqlFiles="${devserver.repository.database.dir}\UpdateScripts\" DatabaseServer="${database.server.production}" />
  </target>
  
  <!-- same as the one above - NAnt only allows a target to be executed once...even if you really would like it to be done twice!-->
  <target name="buildDevelopmentDatabase2">
    <echo message="#### TARGET - updateDevserver ####"/>
    <echo message=""/>
    <echo message="Killing all processes..."/>
    <exec failonerror="true"  verbose="true" program="osql" commandline="-b -n -S ${database.server.production} -E -i&quot;${devserver.repository.database.dir}\KillProcessesUsingFisharoo.sql&quot; -d master" />
    <echo message="Detaching database"/>
    <exec failonerror="false" verbose="true" program="osql" commandline="-b -n -S ${database.server.production} -E -i&quot;${devserver.repository.database.dir}\DropFisharoo.sql&quot; -d master" />
    <echo message="Copying versioned database files to dev server"/>
    <copy file="${devserver.repository.versioneddatabase.dir}\Fisharoo.mdf" tofile="${devserver.database.dir}\Fisharoo.mdf" overwrite="true" verbose="true" />
    <copy file="${devserver.repository.versioneddatabase.dir}\Fisharoo_log.ldf" tofile="${devserver.database.dir}\Fisharoo_log.ldf" overwrite="true" verbose="true" />
    <echo message="Attaching versioned database files to dev server"/>
    <exec failonerror="true" verbose="true" program="osql" commandline="-b -n -S ${database.server.production} -E -i&quot;${devserver.repository.database.dir}\AttachFisharoo_DevServer.sql&quot; -d master" />

    <ExecuteSqlFiles PathToSqlFiles="${devserver.repository.database.dir}\UpdateScripts\" DatabaseServer="${database.server.production}" />
  </target>
  
  <target name="updateDatabase">
    <ExecuteSqlFiles PathToSqlFiles="${database.dir}\UpdateScripts\" DatabaseServer="${database.server.development}" />
  </target>

  <target name="dropDatabase">
    <echo message="#### TARGET - drop-database ####"/>
    <echo message="Dropping database ${database.name}..."/>
    <exec failonerror="false" verbose="true" program="osql" commandline="-b -n -S ${database.server.development} -E -i&quot;${database.dir}\KillProcessesUsingFisharoo.sql&quot; -d master" />
    <exec failonerror="true" verbose="true" program="osql" commandline="-b -n -S ${database.server.development} -E -i&quot;${database.dir}\DropFisharoo.sql&quot; -d master" />
  </target>

  <target name="attachDatabase">
    <echo message="#### TARGET - attachDatabase ####"/>
    <echo message="Creating database ${database.name}..."/>
    <!--<exec failonerror="true" verbose="true" program="osql" commandline="-b -n -S ${database.server.development} -E -i&quot;${database.dir}\KillProcessesUsingFisharoo.sql&quot; -d master" />-->
    <!--<exec failonerror="false" verbose="true" program="osql" commandline="-b -n -S ${database.server.development} -E -i&quot;${database.dir}\DropFisharoo.sql&quot; -d master" />-->
    <exec failonerror="true" verbose="true" program="osql" commandline="-b -n -S ${database.server.development} -E -i&quot;${database.dir}\AttachFisharoo.sql&quot; -d master" />
  </target>

  <target name="copyVersionedDatabaseOverLocalDatabase">
    <echo message="#### TARGET - copyVersionedDatabaseOverLocalDatabase ####"/>
    <echo message="Copying versioned database over your local database"/>
    <copy file="${versioneddatabase.dir}\Fisharoo.mdf" tofile="${localdatabase.dir}\Fisharoo.mdf" overwrite="true" verbose="true" />
    <copy file="${versioneddatabase.dir}\Fisharoo_log.ldf" tofile="${localdatabase.dir}\Fisharoo_log.ldf" overwrite="true" verbose="true" />
  </target>

  <target name="copyLocalDatabaseOverVersionedDatabase">
    <echo message="#### TARGET - copyLocalDatabaseOverVersionedDatabase ####"/>
    <echo message="Copying local database over your versioned database"/>
    <copy file="${localdatabase.dir}\Fisharoo.mdf" tofile="${versioneddatabase.dir}\Fisharoo.mdf" overwrite="true" verbose="true" />
    <copy file="${localdatabase.dir}\Fisharoo_log.ldf" tofile="${versioneddatabase.dir}\Fisharoo_log.ldf" overwrite="true" verbose="true" />
  </target>

  <target name="deleteLocalDatabaseFiles">
    <echo message="#### TARGET - deleteLocalDatabaseFiles ####"/>
    <echo message="Deleting your local database files"/>
    <delete verbose="true">
      <fileset basedir="${localdatabase.dir}">
        <include name="*.mdf"/>
        <include name="*.ldf"/>
      </fileset>
    </delete>
  </target>
  
  <!-- Coding Tasks -->
  <target name="compile">
    <echo message="#### TARGET - compile ####"/>
    <echo message=""/>
    <echo message="Build Directory is ${build.dir}" />
    <exec program="${framework}\msbuild.exe"
				  commandline="..\Source\FisharooWeb.sln /t:Clean /v:q" workingdir="." />
    <exec program="${framework}\msbuild.exe"
				  commandline="..\Source\FisharooWeb.sln /t:Rebuild /v:q" workingdir="." />
  </target>

  <target name="fisharooCoreTests">
    <echo message="#### TARGET - fisharooCoreTests ####"/>
    <echo message=""/>
    <echo message="...deleting results directory"/>
    <delete dir="${results.dir}/FisharooCoreTests" if="${directory::exists('${results.dir}')}" />
    <echo message="...creating results directory"/>
    <mkdir dir="${results.dir}/FisharooCoreTests"/>
    <echo message="...running core tests"/>
    <nunit2 failonerror="true" verbose="true">
      <formatter type="Xml" outputdir="${results.dir}/FisharooCoreTests" usefile="true" extension=".xml"/>
      <formatter type="Plain" />
      <test assemblyname="${FisharooCoreTests.bin.dir}\Fisharoo.FisharooCoreTests.dll" appconfig="${nant::get-base-directory()}nant.tests.config"/>
    </nunit2>
  </target>

  <target name="fisharooWebTests">
    <echo message="#### TARGET - fisharooWebTests ####"/>
    <echo message=""/>
    <echo message="...deleting results directory"/>
    <delete dir="${results.dir}/FisharooWebTests" if="${directory::exists('${results.dir}')}" />
    <echo message="...creating results directory"/>
    <mkdir dir="${results.dir}/FisharooWebTests"/>
    <echo message="...running web tests"/>
    <nunit2 failonerror="true" verbose="true">
      <formatter type="Xml" outputdir="${results.dir}/FisharooWebTests" usefile="true" extension=".xml"/>
      <formatter type="Plain" />
      <test assemblyname="${FisharooWebTests.bin.dir}/Fisharoo.FisharooWebTests.dll" appconfig="${nant::get-base-directory()}nant.tests.config"/>
    </nunit2>
  </target>
  
  <target name="updateDevserver"> 
    <echo message="Deleting all files in development web directory"/>
    <!--<delete verbose="true">
      <fileset basedir="${devserver.website.dir}">
        <include name="*.*" />
      </fileset>
    </delete>-->
    
    <echo message="XCopy files to development web directory"/>
    <copy todir="${devserver.website.dir}" includeemptydirs="false" overwrite="true">
      <fileset basedir="C:\data\repositories\Fisharoo.com\Source\FisharooWeb">
        <exclude name="**/obj/**"/>
        <exclude name="**/*.csproj"/>
        <exclude name="**/*.cs"/>
        <exclude name="**/*.csproj*"/>
        <exclude name="**/App_Data*"/>
        <exclude name="**/App_Data*/**"/>
        <exclude name="**/.svn*"/>
        <exclude name="**/.svn*/**"/>
        <include name="**"/>
      </fileset>
    </copy>
    
    <!-- reset iis 
    <echo message="Resetting IIS"/>
    <exec verbose="true" program="iisreset" />-->
  </target>
</project>
